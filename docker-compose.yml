services:
  front:
    build:
      context: ${FRONTEND_CONTEXT}
    container_name: front
    env_file:
      - ./.env
    # ports:
    #   - "3000:80" # Mapeia a porta 3000 do host para a porta 80 no contêiner
    networks:
      - app-network

  back:
    build:
      context: ${BACKEND_CONTEXT}
    container_name: back
    env_file:
      - ./.env
    ports:
      - "3001:3001" # Mapeia a porta 3001 do host para a porta 3001 no contêiner
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
        restart: true

  db:
    image: postgres:17
    container_name: postgres
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "fullstack3"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d fullstack3" ]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80" # Mapeia a porta 80 do host para a porta 80 no contêiner
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro" # Monta o arquivo nginx.conf no contêiner
    networks:
      - app-network
    depends_on:
      - front
      - back

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
